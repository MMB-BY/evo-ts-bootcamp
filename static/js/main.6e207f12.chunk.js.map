{"version":3,"sources":["components/pillar/Pillar.tsx","utils/randomValueGenerator.ts","utils/arrayWithRandomValues.ts","utils/bubbleSort.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Pillar","this","props","array","map","el","index","className","style","height","Component","randomValue","min","max","Math","random","arrayWithRandomValues","lengthOfArray","floor","Array","from","length","Sorted","bubbleSort","arr","i","j","bubble","App","interval","state","sortingArray","status","delay","alreadySorted","sorting","window","setInterval","setState","clearInterval","pause","reset","step","setDelay","delayDuration","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e207f12.chunk.js","sourcesContent":["import { Component } from \"react\";\r\ninterface PillarProps {\r\n  array: number[];\r\n}\r\ninterface PillarState {\r\n  arr: number[];\r\n}\r\n\r\nexport class Pillar extends Component<PillarProps, PillarState> {\r\n  render() {\r\n    return this.props.array.map((el, index) => (\r\n      <div key={index} className=\"pillar\" style={{ height: el + \"px\" }}></div>\r\n    ));\r\n  }\r\n}\r\n","export function randomValue(min: number, max: number): number {\r\n  return min + Math.random() * (max - min);\r\n}\r\n","import { randomValue } from \"./randomValueGenerator\";\r\n\r\nexport function arrayWithRandomValues(): number[] {\r\n  const lengthOfArray = Math.floor(randomValue(20, 40));\r\n\r\n  return Array.from({ length: lengthOfArray }).map(() => randomValue(1, 200));\r\n}\r\n","export let Sorted: boolean = false;\r\n\r\nexport function bubbleSort(arr: number[]): number[] {\r\n  Sorted = false;\r\n  for (let i = 0; i < arr.length; i++) {\r\n    for (let j = i; j < arr.length; j++) {\r\n      let bubble = 0;\r\n      if (arr[j + 1] < arr[j]) {\r\n        bubble = arr[j];\r\n        arr[j] = arr[j + 1];\r\n        arr[j + 1] = bubble;\r\n        return arr;\r\n      }\r\n    }\r\n  }\r\n  Sorted = true;\r\n  return arr;\r\n}\r\n","import React, { Component } from \"react\";\nimport { Pillar } from \"./components/pillar/Pillar\";\nimport { arrayWithRandomValues } from \"./utils/arrayWithRandomValues\";\nimport { bubbleSort, Sorted } from \"./utils/bubbleSort\";\nimport \"./App.css\";\nimport \"./components/pillar/pillar.css\";\n\ninterface AppProps {}\ninterface AppState {\n  sortingArray: number[];\n  status: string;\n  delay: number;\n  alreadySorted?: boolean;\n}\n\nexport class App extends Component<AppProps, AppState> {\n  interval: number | undefined;\n\n  state = {\n    sortingArray: arrayWithRandomValues(),\n    status: \"pending\",\n    delay: 100,\n    alreadySorted: Sorted,\n  };\n\n  sorting = (): void => {\n    this.interval = window.setInterval(() => {\n      if (this.state.alreadySorted) {\n        this.setState({ status: \"SORTED\" });\n        clearInterval(this.interval);\n      } else {\n        this.setState({\n          sortingArray: bubbleSort(this.state.sortingArray),\n          status: \"sorting\",\n          alreadySorted: Sorted,\n        });\n      }\n    }, this.state.delay);\n  };\n\n  pause = (): void => {\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.setState(() => ({ status: \"pause\" }));\n    }\n  };\n\n  reset = (): void => {\n    this.pause();\n    this.setState({\n      sortingArray: arrayWithRandomValues(),\n      status: \"reset\",\n      alreadySorted: false,\n    });\n  };\n\n  step = (): void => {\n    this.pause();\n    this.setState({\n      sortingArray: bubbleSort(this.state.sortingArray),\n      status: \"step. pending\",\n      alreadySorted: Sorted,\n    });\n  };\n\n  setDelay = (delayDuration: number): void => {\n    this.pause();\n    this.setState({\n      status: \"Delay changed. Paused. press SORT button.\",\n      delay: delayDuration,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"game\">\n          <div className=\"title\">Bubble Sort</div>\n          <div className=\"pillarContainer\">\n            <Pillar array={this.state.sortingArray} />\n          </div>\n          <div className=\"buttonContainer\">\n            <button onClick={this.reset}>reset</button>\n            <button onClick={this.pause}>pause</button>\n            <button onClick={this.step}>step</button>\n            <button\n              disabled={\n                this.state.status === \"sorting\" ||\n                this.state.status === \"SORTED\"\n              }\n              onClick={this.sorting}\n            >\n              sort\n            </button>\n          </div>\n          <div className=\"status\">{this.state.status}</div>\n          <div className=\"delay_section\">\n            <div className=\"delay_section_title\">Choose interval</div>\n            <button className=\"delay\" onClick={() => this.setDelay(50)}>\n              50\n            </button>\n            <button className=\"delay\" onClick={() => this.setDelay(75)}>\n              75\n            </button>\n            <button className=\"delay\" onClick={() => this.setDelay(100)}>\n              100\n            </button>\n            <button className=\"delay\" onClick={() => this.setDelay(150)}>\n              150\n            </button>\n            <button className=\"delay\" onClick={() => this.setDelay(200)}>\n              200\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}